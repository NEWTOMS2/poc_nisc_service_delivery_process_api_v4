<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="http_get_by_id_service_order_api-test-suite.xml" />
	<munit:before-test name="http_get_by_id_service_order_api-test-suiteBefore_Test" description="Before tests actions" doc:id="608dce31-9521-4d1c-8de7-44ef393c4b44" >
		<flow-ref doc:name="setExpectedPutUpdateServiceOrderResponse" doc:id="12677ed6-dc26-43ef-9548-452531cbac5b" name="setExpectedPutUpdateServiceOrderResponse"/>
	</munit:before-test>
	<munit:test name="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenReturnAValidResponse" description="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenReturnAValidResponse" doc:id="6476ef94-73e2-4cdb-96e7-88248e295021">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="poc_nisc_service_delivery_process_api_v4-main" />
			<munit:enable-flow-source value="get:\service\order\(id):poc_nisc_service_delivery_process_api_v4-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when call getServiceOrderById" doc:id="109405de-de4b-4ae4-a746-ec5fd05071d5" processor="mule:flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="name" whereValue="getServiceOrderById" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.putUpdateServiceOrderResponse]" mediaType="application/json"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="requestHTTPGetServiceOrderById" doc:id="d4f3fa9d-5ecb-4c1e-83f6-510c5dc9e08f" name="requestHTTPGetServiceOrderById" />
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Response Message is Not Null" doc:id="a64c8e06-14a9-4803-b414-1edd0515d58f" expression="#[payload]" is="#[MunitTools::notNullValue()]" message="Response Message is Null!!" />
			<munit-tools:assert-that doc:name="Assert that Response Message is the expected Message" doc:id="e112074c-784a-4362-af67-a4af35b00732" expression="#[payload]" is="#[MunitTools::equalTo(vars.putUpdateServiceOrderResponse default '')]" message="Response Message is Null!!" />
</munit:validation>
	</munit:test>
	<munit:test name="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenReturnAHTTPSTATUS200" description="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenReturnAHTTPSTATUS200" doc:id="f7803af1-cfea-4a94-b782-2f02afb12f19">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="poc_nisc_service_delivery_process_api_v4-main" />
			<munit:enable-flow-source value="get:\service\order\(id):poc_nisc_service_delivery_process_api_v4-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when call getServiceOrderById" doc:id="3a363d6c-ed31-4b64-804d-577c581b46ab" processor="mule:flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="name" whereValue="getServiceOrderById" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.putUpdateServiceOrderResponse]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		
</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="requestHTTPGetServiceOrderById" doc:id="f278c747-004b-4cb7-a931-2a7541f2f89d" name="requestHTTPGetServiceOrderById" />

</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Http Status Code is the expected" doc:id="982d009b-b1ce-42ae-b4b9-3810d69f5f9f" expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200 default 200)]" message="Http Status Code is not the expected!!!" />
			<munit-tools:assert-that doc:name="Assert that Http Reason Phrase is the expected" doc:id="7c58097b-26e4-46d7-b15d-590e597afcb6" expression="#[attributes.reasonPhrase]" is="#[MunitTools::equalTo('OK' default '')]" message="Http Status Code is not the expected!!!" />
</munit:validation>
	</munit:test>
	<munit:test name="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenReturnExpectedContentType" description="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenReturnExpectedContentType" doc:id="dbf1b8d4-b0ea-4e35-9e18-3e24d7cf026f">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="poc_nisc_service_delivery_process_api_v4-main" />
			<munit:enable-flow-source value="get:\service\order\(id):poc_nisc_service_delivery_process_api_v4-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when call getServiceOrderById" doc:id="304a6fdd-4105-4774-a86f-cbaf1d66f3a8" processor="mule:flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="name" whereValue="getServiceOrderById" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.putUpdateServiceOrderResponse]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		
</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="requestHTTPGetServiceOrderById" doc:id="a18fd6fe-b1bc-4c86-b70f-2deabb44f08c" name="requestHTTPGetServiceOrderById" />

</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Http Content Type is the expected" doc:id="e54113ea-f6fe-4541-bfce-be68fbb3d81a" expression="#[attributes.headers.'content-type']" is="#[MunitTools::equalTo('application/json' default '')]" message="Http Content Type is not the expected!!!" />
</munit:validation>
	</munit:test>
	<munit:test name="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenGetIdFromURI" description="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenGetIdFromURI" doc:id="9a8a3a8c-a23f-4224-a39b-1883ebd81c94">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="poc_nisc_service_delivery_process_api_v4-main" />
			<munit:enable-flow-source value="get:\service\order\(id):poc_nisc_service_delivery_process_api_v4-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:spy doc:name="Spy Call getServiceOrderById" doc:id="06da06dd-72ee-43be-a11b-8107694448d3" processor="mule:flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="name" whereValue="getServiceOrderById" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert-that doc:name="Assert that Http URI Id Param is the expected" doc:id="e983d392-0a53-4296-a737-07d7c6b9f32f" expression="#[vars.id]" is="#[MunitTools::equalTo('1' default '0')]" message="Http URI Id Param is not the expected!!!" />
				</munit-tools:before-call>
			</munit-tools:spy>
			<munit-tools:mock-when doc:name="Mock when call getServiceOrderById" doc:id="0dd2dea2-c455-48f5-88f2-b98e3434aff2" processor="mule:flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="name" whereValue="getServiceOrderById" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.putUpdateServiceOrderResponse]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		
</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="requestHTTPGetServiceOrderById" doc:id="c9c07448-3585-4acf-8547-8482766ef82a" name="requestHTTPGetServiceOrderById" />

</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="1738e92a-ad7d-44bc-9adf-878c2a9ec3f4" processor="mule:flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="name" whereValue="setOrderIdVaribleFromURIId" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>

</munit:validation>
	</munit:test>
	<munit:test name="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenVerifyThatTheRequestWasRoutedToRigthImplementation" description="FuntionalTest-GivenARequestWhenGetByIdAServiceOrderThenVerifyThatTheRequestWasRoutedToRigthImplementation" doc:id="4fe8dd85-1502-451f-959c-df8ca1a9a448">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="poc_nisc_service_delivery_process_api_v4-main" />
			<munit:enable-flow-source value="get:\service\order\(id):poc_nisc_service_delivery_process_api_v4-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when call getServiceOrderById" doc:id="a21bad37-5958-4d65-a451-38d2588b97de" processor="mule:flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="name" whereValue="getServiceOrderById" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.putUpdateServiceOrderResponse]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		
</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="requestHTTPGetServiceOrderById" doc:id="b9fa1d00-aecd-45c6-971d-199b600bb728" name="requestHTTPGetServiceOrderById" />

</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="58be4105-0717-427e-949e-dd7e63fafb42" processor="mule:flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="name" whereValue="getServiceOrderById" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>

</munit:validation>
	</munit:test>
	<sub-flow name="requestHTTPGetServiceOrderById" doc:id="e9e45a8b-e0cf-42ae-9fc5-f8d724b81c5a" >
		<http:request method="GET" doc:name="HTTP-GET-ServiceOrder" doc:id="53731e9a-0604-46c8-9930-0e47b410a06e" config-ref="HTTP_API_TEST_Request_configuration" path="/service/order/{id}">
					<http:uri-params><![CDATA[#[output application/java
---
{
	"id" : "1"
}]]]></http:uri-params>
				<http:response-validator>
						<http:success-status-code-validator values="200" />
					</http:response-validator>
			</http:request>
	</sub-flow>
</mule>
